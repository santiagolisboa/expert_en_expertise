// HTML elements to use
const generateBtn = document.getElementById("generate");
const titleEl = document.getElementById("title");
const descriptionEl = document.getElementById("description");

// OpenAI model
const openaiUrl = "https://api.openai.com/v1/engines/davinci/completions";

// API key
const openaiHeaders = {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer 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'
  };
  

// When click...
generateBtn.addEventListener("click", () => {
  // Get the title generated in generateur.js
 const title = titleEl.innerText;


  const requestBody = {
   prompt: `Le cursus proposÃ© "${title}" est un cursus de master`,
    max_tokens: 1024,
    n: 1,
    stop: "\n"
  };

  // Ask OpenAI to generate a description from the title generated in generateur.js
  fetch(openaiUrl, {
    method: "POST",
    headers: openaiHeaders,
    body: JSON.stringify(requestBody)
  })
    .then(response => response.json())
    .then(data => {
      // Get the generated description 
      let description = data.choices[0].text.trim();
      // Trim output to 500 characters or less
      description = description.slice(200, 1000);
      // Add ellipsis if description was trimmed
      if (description.length === 1000) {
        description += "...";
      }
      // Description generated by OpenaAI to text
      descriptionEl.innerText = "Cette formation propose " + description;
    })
    .catch(error => {
      console.error(error);
    });
});